//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/_Game/Inputs/InputActionAsset_Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActionAsset_Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActionAsset_Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActionAsset_Player"",
    ""maps"": [
        {
            ""name"": ""ActionMap_Player"",
            ""id"": ""55a193bc-f222-47c2-8721-635309b1e0a9"",
            ""actions"": [
                {
                    ""name"": ""Figure_1"",
                    ""type"": ""Button"",
                    ""id"": ""b815d00d-2593-4f27-94bd-58815c963254"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Figure_2"",
                    ""type"": ""Button"",
                    ""id"": ""2db0b802-3a27-4b38-adf9-0fe07d6e1aeb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Figure_3"",
                    ""type"": ""Button"",
                    ""id"": ""38bf6c74-1e89-486a-9b00-cd21cfdd985b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Figure_4"",
                    ""type"": ""Button"",
                    ""id"": ""9fac3f67-4c2a-4aaf-b502-f12dccecaf4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f1519923-a784-4291-baae-446f0941302d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Figure_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6f1eda9-9ec3-4bae-926b-f54d57b4b4db"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Figure_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d015a4b4-9344-48e1-9a5e-7c5dc88ef4dd"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Figure_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6887879-cc8a-4744-8f06-1143a518c847"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Figure_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // ActionMap_Player
        m_ActionMap_Player = asset.FindActionMap("ActionMap_Player", throwIfNotFound: true);
        m_ActionMap_Player_Figure_1 = m_ActionMap_Player.FindAction("Figure_1", throwIfNotFound: true);
        m_ActionMap_Player_Figure_2 = m_ActionMap_Player.FindAction("Figure_2", throwIfNotFound: true);
        m_ActionMap_Player_Figure_3 = m_ActionMap_Player.FindAction("Figure_3", throwIfNotFound: true);
        m_ActionMap_Player_Figure_4 = m_ActionMap_Player.FindAction("Figure_4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // ActionMap_Player
    private readonly InputActionMap m_ActionMap_Player;
    private List<IActionMap_PlayerActions> m_ActionMap_PlayerActionsCallbackInterfaces = new List<IActionMap_PlayerActions>();
    private readonly InputAction m_ActionMap_Player_Figure_1;
    private readonly InputAction m_ActionMap_Player_Figure_2;
    private readonly InputAction m_ActionMap_Player_Figure_3;
    private readonly InputAction m_ActionMap_Player_Figure_4;
    public struct ActionMap_PlayerActions
    {
        private @InputActionAsset_Player m_Wrapper;
        public ActionMap_PlayerActions(@InputActionAsset_Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Figure_1 => m_Wrapper.m_ActionMap_Player_Figure_1;
        public InputAction @Figure_2 => m_Wrapper.m_ActionMap_Player_Figure_2;
        public InputAction @Figure_3 => m_Wrapper.m_ActionMap_Player_Figure_3;
        public InputAction @Figure_4 => m_Wrapper.m_ActionMap_Player_Figure_4;
        public InputActionMap Get() { return m_Wrapper.m_ActionMap_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ActionMap_PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IActionMap_PlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_ActionMap_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ActionMap_PlayerActionsCallbackInterfaces.Add(instance);
            @Figure_1.started += instance.OnFigure_1;
            @Figure_1.performed += instance.OnFigure_1;
            @Figure_1.canceled += instance.OnFigure_1;
            @Figure_2.started += instance.OnFigure_2;
            @Figure_2.performed += instance.OnFigure_2;
            @Figure_2.canceled += instance.OnFigure_2;
            @Figure_3.started += instance.OnFigure_3;
            @Figure_3.performed += instance.OnFigure_3;
            @Figure_3.canceled += instance.OnFigure_3;
            @Figure_4.started += instance.OnFigure_4;
            @Figure_4.performed += instance.OnFigure_4;
            @Figure_4.canceled += instance.OnFigure_4;
        }

        private void UnregisterCallbacks(IActionMap_PlayerActions instance)
        {
            @Figure_1.started -= instance.OnFigure_1;
            @Figure_1.performed -= instance.OnFigure_1;
            @Figure_1.canceled -= instance.OnFigure_1;
            @Figure_2.started -= instance.OnFigure_2;
            @Figure_2.performed -= instance.OnFigure_2;
            @Figure_2.canceled -= instance.OnFigure_2;
            @Figure_3.started -= instance.OnFigure_3;
            @Figure_3.performed -= instance.OnFigure_3;
            @Figure_3.canceled -= instance.OnFigure_3;
            @Figure_4.started -= instance.OnFigure_4;
            @Figure_4.performed -= instance.OnFigure_4;
            @Figure_4.canceled -= instance.OnFigure_4;
        }

        public void RemoveCallbacks(IActionMap_PlayerActions instance)
        {
            if (m_Wrapper.m_ActionMap_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IActionMap_PlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_ActionMap_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ActionMap_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ActionMap_PlayerActions @ActionMap_Player => new ActionMap_PlayerActions(this);
    public interface IActionMap_PlayerActions
    {
        void OnFigure_1(InputAction.CallbackContext context);
        void OnFigure_2(InputAction.CallbackContext context);
        void OnFigure_3(InputAction.CallbackContext context);
        void OnFigure_4(InputAction.CallbackContext context);
    }
}
